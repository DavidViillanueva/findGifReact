{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GigGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GigGridItem","className","key","alt","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iPAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAevC,OACI,0BAAMC,SATW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAhBS,SAAEP,GACnBF,EAAcE,EAAEQ,OAAOF,QAgBfG,YAAY,mBAM5Bf,EAAYgB,SAAW,CACnBf,c,OAAegB,EAAUC,KAAKC,YAGnBnB,Q,uBClCFoB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCiBLO,G,KAbK,SAAC,GAAa,IAAXL,EAAU,EAAVA,IACnB,OACI,yBAAKM,UAAU,iDACX,yBACIC,IAAQP,EAAIC,GACZO,IAAQR,EAAIE,MACZO,IAAQT,EAAIR,MAEhB,2BAAIQ,EAAIE,UCsBLQ,EA1BC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECJN,SAAEA,GAAe,IAAD,EAEZnB,mBAAS,CACjC0B,KAAM,GACNc,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBxC,OAbAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAjB,GACHe,EAAS,CACLhB,KAAMC,EACNa,SAAS,SAKtB,CAAErB,IAEEsB,EDd2BI,CAAc1B,GAAnCa,EAFiB,EAEtBN,KAAcc,EAFQ,EAERA,QAEtB,OACI,oCACA,wBAAIL,UAAU,yCAAd,IAAyDhB,EAAzD,KAEEqB,GAAW,uBAAGL,UAAU,oCAAb,WAEb,yBAAKA,UAAU,QACX,4BAEQH,EAAOJ,KAAK,SAAEkB,GAAF,OACR,kBAAC,EAAD,CACIV,IAAQU,EAAMhB,GACdD,IAAQiB,WEWrBC,MA9Bf,WAAwB,MAIgB/C,mBAAS,CAAC,cAJ1B,mBAIbgD,EAJa,KAIDjD,EAJC,KAUpB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQiD,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACIiB,IAAQjB,EACRA,SAAaA,U,MClBzC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.0bcbb136.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [inputValue,...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleChange }\r\n                placeholder=\"Buscador GiF\"\r\n            /> \r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propType = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=ph1rBFk2S492glbmLlgTkQR82VERkCGD`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nimport 'animate.css';\r\n\r\nconst GigGridItem = ({ img }) => {\r\n    return (\r\n        <div className=\"GifCard animate__animated animate__fadeInDown\">\r\n            <img\r\n                key = { img.id }\r\n                alt = { img.title}\r\n                src = { img.url }\r\n            />\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GigGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport GifGridItem from './GigGridItem';\r\n\r\nimport 'animate.css';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n    \r\n    const { data:images , loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInDown\"> { category } </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n        <div className=\"grid\">\r\n            <ol>\r\n                {\r\n                    images.map( ( image ) => \r\n                        <GifGridItem \r\n                            key = { image.id }\r\n                            img = { image } \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                })\r\n            }\r\n            )\r\n        \r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GifExpertApp() {\r\n\r\n    // const categories = ['One Punch', 'South Park', 'Gintama'];\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,'Full Metal Alchimist']);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}